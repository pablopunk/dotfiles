# vim:fileencoding=utf-8:ft=bash:foldmethod=marker

# Start configuration added by Zim install {{{
# Remove older command from the history if a duplicate is to be added.
setopt HIST_IGNORE_ALL_DUPS
# Set editor default keymap to emacs (`-e`) or vi (`-v`)
bindkey -e
# Prompt for spelling correction of commands.
setopt CORRECT
# Remove path separator from WORDCHARS.
WORDCHARS=${WORDCHARS//[\/]}
# Zim configuration
# Disable automatic widget re-binding on each precmd. This can be set when
# zsh-users/zsh-autosuggestions is the last module in your ~/.zimrc.
ZSH_AUTOSUGGEST_MANUAL_REBIND=1
# zsh-syntax-highlighting
# See https://github.com/zsh-users/zsh-syntax-highlighting/blob/master/docs/highlighters.md
ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets)
# Initialize modules
ZIM_HOME=${ZDOTDIR:-${HOME}}/.zim
# Download zimfw plugin manager if missing.
if [[ ! -e ${ZIM_HOME}/zimfw.zsh ]]; then
  if (( ${+commands[curl]} )); then
    curl -fsSL --create-dirs -o ${ZIM_HOME}/zimfw.zsh \
        https://github.com/zimfw/zimfw/releases/latest/download/zimfw.zsh
  else
    mkdir -p ${ZIM_HOME} && wget -nv -O ${ZIM_HOME}/zimfw.zsh \
        https://github.com/zimfw/zimfw/releases/latest/download/zimfw.zsh
  fi
fi
# Install missing modules, and update ${ZIM_HOME}/init.zsh if missing or outdated.
if [[ ! ${ZIM_HOME}/init.zsh -nt ${ZIM_CONFIG_FILE:-${ZDOTDIR:-${HOME}}/.zimrc} ]]; then
  source ${ZIM_HOME}/zimfw.zsh init
fi
# Initialize modules.
source ${ZIM_HOME}/init.zsh

# zsh-history-substring-search
zmodload -F zsh/terminfo +p:terminfo
# Bind ^[[A/^[[B manually so up/down works both before and after zle-line-init
for key ('^[[A' '^P' ${terminfo[kcuu1]}) bindkey ${key} history-substring-search-up
for key ('^[[B' '^N' ${terminfo[kcud1]}) bindkey ${key} history-substring-search-down
for key ('k') bindkey -M vicmd ${key} history-substring-search-up
for key ('j') bindkey -M vicmd ${key} history-substring-search-down
unset key
# }}} End configuration added by Zim install

# `brew shellenv` {{{
# I used to run `eval $(brew shellenv)` but it was too slow
if [ -f /proc/sys/kernel/osrelease ]; then
  # Linuxbrew
  export HOMEBREW_CELLAR="/home/linuxbrew/.linuxbrew/Cellar";
  export HOMEBREW_REPOSITORY="/home/linuxbrew/.linuxbrew/Homebrew";
  export PATH="/home/linuxbrew/.linuxbrew/bin:/home/linuxbrew/.linuxbrew/sbin${PATH+:$PATH}";
  [ -z "${MANPATH-}" ] || export MANPATH=":${MANPATH#:}";
  export INFOPATH="/home/linuxbrew/.linuxbrew/share/info:${INFOPATH:-}";
  [ -z "${XDG_DATA_DIRS-}" ] || export XDG_DATA_DIRS="/home/linuxbrew/.linuxbrew/share:${XDG_DATA_DIRS-}";
else
  # macOS Homebrew
  export HOMEBREW_PREFIX="/opt/homebrew";
  export HOMEBREW_CELLAR="/opt/homebrew/Cellar";
  export HOMEBREW_REPOSITORY="/opt/homebrew";
  export PATH="/opt/homebrew/bin:/opt/homebrew/sbin${PATH+:$PATH}";
  export MANPATH="/opt/homebrew/share/man${MANPATH+:$MANPATH}:";
  export INFOPATH="/opt/homebrew/share/info:${INFOPATH:-}";
fi
# disable auto-update
export HOMEBREW_NO_AUTO_UPDATE=1
# fix compinit:527: no such file or directory: /usr/local/share/zsh/site-functions/_brew
export FPATH=$(echo "$FPATH" | tr ':' '\n' | grep -v "/usr/local/share/zsh/site-functions" | awk '{printf "%s:", $0}' | sed 's/:$//')
# }}}

# modular config {{{
ZSHRC_D="${ZDOTDIR:-$HOME}/.zshrc.d"
[ -d "$ZSHRC_D" ] || mkdir -p "$ZSHRC_D"
for rc in "$ZSHRC_D"/*.sh; do
  [ -f "$rc" ] && source "$rc"
done
# modular config }}}

# theme (dark/light) {{{
change_colorscheme() {
  current_theme=$(cat $HOME/.theme 2>/dev/null || echo Dark)

  if [ ! -f /proc/sys/kernel/osrelease ]; then
    defaults read -g AppleInterfaceStyle 2>&- >&-
    if [[ $? == 1 ]]; then
      new_theme=Light
    else
      new_theme=Dark
    fi
    if [[ $current_theme != $new_theme ]]; then
      echo $new_theme > $HOME/.theme
    fi
  fi
}
# Run the colorscheme change function in the background without output
(change_colorscheme >/dev/null 2>&1 &)
# theme (dark/light) }}}

# Prompt stuff {{{
export ON_COLOR=magenta
export OFF_COLOR=cyan
# Prompt stuff }}}

# Generic term stuff {{{
TERM=xterm-256color
export LANG="en_US.UTF-8"
export LC_ALL="en_US.UTF-8"
# Generic term stuff }}}

# Variables {{{
export EDITOR="nvim"
# Variables }}}

# Added by LM Studio CLI (lms)
export PATH="$PATH:/Users/pablopunk/.lmstudio/bin"
# End of LM Studio CLI section

