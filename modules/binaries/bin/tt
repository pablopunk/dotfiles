#!/usr/bin/env bash

# Configurable path
MAZE_RUNTIME_PATH=~/src/maze/maze-monorepo/.maze-runtime.yaml

# Usage: tt [--disable|-d] [search]
# Examples:
#   tt shared-components # trigger exact match
#   tt shared webapp     # trigger fuzzy match (multiple services) (select before triggering)
#   tt shard             # trigger fuzzy match (select before triggering)
#   tt                   # select from all items
#   tt -d maze-webapp    # disable maze-webapp

fzf_short() {
  fzf --height=10 --reverse "$@"
}

all_items=($(awk -F: '/^[[:space:]]{6}[a-zA-Z_-]+/ {print $1}' "$MAZE_RUNTIME_PATH" | sed 's/^[[:space:]]*//'))

trigger_item() {
  # call this fn in the background
  if [[ $DISABLE_MODE == true ]]; then
    ( tilt disable "$1" && echo "Disabled $1" ) &
  else
    ( tilt enable "$1" && tilt trigger "$1" ) &
  fi
}

# Export so they can be used in xargs
export -f trigger_item
export DISABLE_MODE

select_and_trigger() {
  printf '%s\n' "${all_items[@]}" | fzf_short "$@" | xargs -I {} bash -c 'trigger_item "$@"' _ {}
}

if [[ $1 == "--disable" || $1 == "-d" ]]; then
  DISABLE_MODE=true
  shift
else
  DISABLE_MODE=false
fi

echo
if [[ $# -gt 0 ]]; then
  for arg in "$@"; do
    matches=($(printf '%s\n' "${all_items[@]}" | grep -i "$arg"))
    if [[ ${#matches[@]} -eq 1 ]]; then
      trigger_item "${matches[0]}" &
    else
      select_and_trigger -q "$arg"
    fi
  done
else
  select_and_trigger
fi

