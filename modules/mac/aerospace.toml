# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = []

# Start AeroSpace at login
start-at-login = false

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 30

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
# on-focused-monitor-changed = ['move-mouse monitor-lazy-center']
on-focused-monitor-changed = []

# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodness#disable-hide-app
automatically-unhide-macos-hidden-apps = true

# Open apps apps when changing workspaces
exec-on-workspace-change = ['/bin/bash', '-c',
    'if [[ "$AEROSPACE_PREV_WORKSPACE" != "$AEROSPACE_FOCUSED_WORKSPACE" ]]; then if [[ "$AEROSPACE_FOCUSED_WORKSPACE" == "T" ]]; then open -a WezTerm; elif [[ "$AEROSPACE_FOCUSED_WORKSPACE" == "G" ]]; then open -a ChatGPT; elif [[ "$AEROSPACE_FOCUSED_WORKSPACE" == "Z" ]]; then open -a "zoom.us"; fi; fi',
]


# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
[key-mapping]
preset = 'qwerty'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 8
inner.vertical =   8
outer.left =       8
outer.bottom =     8
outer.top =        8
outer.right =      8

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

# If automatically-unhide-macos-hidden-apps isnâ€™t enough, you can disable cmd-h altogether (which will make this hotkey unavailable for apps that might use it for other purposes)
cmd-h = [] # Disable "hide application"
cmd-alt-h = [] # Disable "hide others"

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# You can uncomment the following lines to open up terminal with alt + enter shortcut (like in i3)
# alt-enter = '''exec-and-forget osascript -e '
# tell application "Terminal"
#     do script
#     activate
# end tell'
# '''

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
cmd-ctrl-alt-shift-5 = 'layout tiles horizontal vertical'
cmd-ctrl-alt-shift-6 = 'layout accordion horizontal vertical'

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
cmd-ctrl-alt-shift-h = 'focus left'
cmd-ctrl-alt-shift-j = 'focus down'
cmd-ctrl-alt-shift-k = 'focus up'
cmd-ctrl-alt-shift-l = 'focus right'

# # See: https://nikitabobko.github.io/AeroSpace/commands#move
# cmd-ctrl-alt-shift-h = 'move left'
# cmd-ctrl-alt-shift-j = 'move down'
# cmd-ctrl-alt-shift-k = 'move up'
# cmd-ctrl-alt-shift-l = 'move right'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
cmd-ctrl-alt-shift-equal = 'resize smart -50'
cmd-ctrl-alt-shift-minus = 'resize smart +50'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
# alt-1 = 'workspace 1'
# alt-2 = 'workspace 2'
# alt-3 = 'workspace 3'
# alt-4 = 'workspace 4'
# alt-5 = 'workspace 5'
# alt-6 = 'workspace 6'
# alt-7 = 'workspace 7'
# alt-8 = 'workspace 8'
# alt-9 = 'workspace 9'
cmd-ctrl-alt-shift-a = 'workspace A' # In your config, you can drop workspace bindings that you don't need
cmd-ctrl-alt-shift-b = 'workspace B'
cmd-ctrl-alt-shift-c = 'workspace C'
cmd-ctrl-alt-shift-d = 'workspace D'
cmd-ctrl-alt-shift-e = 'workspace E'
cmd-ctrl-alt-shift-f = 'workspace F'
cmd-ctrl-alt-shift-g = 'workspace G'
cmd-ctrl-alt-shift-i = 'workspace I'
cmd-ctrl-alt-shift-m = 'workspace M'
cmd-ctrl-alt-shift-n = 'workspace N'
cmd-ctrl-alt-shift-o = 'workspace O'
cmd-ctrl-alt-shift-p = 'workspace P'
cmd-ctrl-alt-shift-q = 'workspace Q'
cmd-ctrl-alt-shift-r = 'workspace R'
cmd-ctrl-alt-shift-s = 'workspace S'
cmd-ctrl-alt-shift-t = 'workspace T'
cmd-ctrl-alt-shift-u = 'workspace U'
cmd-ctrl-alt-shift-v = 'workspace V'
cmd-ctrl-alt-shift-w = 'workspace W'
cmd-ctrl-alt-shift-x = 'workspace X'
cmd-ctrl-alt-shift-y = 'workspace Y'
cmd-ctrl-alt-shift-z = 'workspace Z'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
alt-shift-ctrl-1 = 'move-node-to-workspace 1'
alt-shift-ctrl-2 = 'move-node-to-workspace 2'
alt-shift-ctrl-3 = 'move-node-to-workspace 3'
alt-shift-ctrl-4 = 'move-node-to-workspace 4'
alt-shift-ctrl-5 = 'move-node-to-workspace 5'
alt-shift-ctrl-6 = 'move-node-to-workspace 6'
alt-shift-ctrl-7 = 'move-node-to-workspace 7'
alt-shift-ctrl-8 = 'move-node-to-workspace 8'
alt-shift-ctrl-9 = 'move-node-to-workspace 9'
alt-shift-ctrl-a = 'move-node-to-workspace A'
alt-shift-ctrl-b = 'move-node-to-workspace B'
alt-shift-ctrl-c = 'move-node-to-workspace C'
alt-shift-ctrl-d = 'move-node-to-workspace D'
alt-shift-ctrl-e = 'move-node-to-workspace E'
alt-shift-ctrl-f = 'move-node-to-workspace F'
alt-shift-ctrl-g = 'move-node-to-workspace G'
alt-shift-ctrl-i = 'move-node-to-workspace I'
alt-shift-ctrl-m = 'move-node-to-workspace M'
alt-shift-ctrl-n = 'move-node-to-workspace N'
alt-shift-ctrl-o = 'move-node-to-workspace O'
alt-shift-ctrl-p = 'move-node-to-workspace P'
alt-shift-ctrl-q = 'move-node-to-workspace Q'
alt-shift-ctrl-r = 'move-node-to-workspace R'
alt-shift-ctrl-s = 'move-node-to-workspace S'
alt-shift-ctrl-t = 'move-node-to-workspace T'
alt-shift-ctrl-u = 'move-node-to-workspace U'
alt-shift-ctrl-v = 'move-node-to-workspace V'
alt-shift-ctrl-w = 'move-node-to-workspace W'
alt-shift-ctrl-x = 'move-node-to-workspace X'
alt-shift-ctrl-y = 'move-node-to-workspace Y'
alt-shift-ctrl-z = 'move-node-to-workspace Z'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
cmd-ctrl-alt-shift-tab = 'workspace-back-and-forth'
# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
ctrl-alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'

# my configs
cmd-ctrl-alt-shift-space = 'fullscreen'

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
cmd-ctrl-alt-shift-9 = 'mode service'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
9 = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main'] # reset layout
f = ['layout floating tiling', 'mode main'] # Toggle between floating and tiling layout
backspace = ['close-all-windows-but-current', 'mode main']

# sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
#s = ['layout sticky tiling', 'mode main']

cmd-ctrl-alt-shift-h = ['join-with left', 'mode main']
cmd-ctrl-alt-shift-j = ['join-with down', 'mode main']
cmd-ctrl-alt-shift-k = ['join-with up', 'mode main']
cmd-ctrl-alt-shift-l = ['join-with right', 'mode main']

# Apps that should always float
[[on-window-detected]]
if.app-name-regex-substring = 'Shop'
run = 'layout floating'

# Apps that should go to a workspace
# [Z] Zoom
[[on-window-detected]]
if.app-name-regex-substring = 'zoom.us'
run = "move-node-to-workspace Z"

# [G] ChatGPT
[[on-window-detected]]
if.app-name-regex-substring = 'ChatGPT'
run = "move-node-to-workspace G"

# [M] Music/Mail/Messaging
[[on-window-detected]]
if.app-name-regex-substring = 'WhatsApp'
run = "move-node-to-workspace M"
[[on-window-detected]]
if.app-name-regex-substring = 'Telegram'
run = "move-node-to-workspace M"
[[on-window-detected]]
if.app-name-regex-substring = 'Missive'
run = "move-node-to-workspace M"
[[on-window-detected]]
if.app-name-regex-substring = 'Spotify'
run = "move-node-to-workspace M"

# [B] BambuStudio
[[on-window-detected]]
if.app-name-regex-substring = 'Bambu Studio'
run = "move-node-to-workspace B"
