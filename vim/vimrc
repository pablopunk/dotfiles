"
" Some general settings
"

set nocompatible
filetype plugin indent on
syntax on

""""" I never change these
set ttyfast lazyredraw incsearch hlsearch ignorecase smartcase infercase cursorline hidden autoread linebreak number mouse=a encoding=utf-8 backspace=indent,eol,start nowrap

""""" Sometimes I change these
set noshowmode                 " Don't show the mode you're in
" set relativenumber             " I will regret it (see...)
set scrolloff=3                " Spacing on top and bottom
set laststatus=2               " Hide bottom status line
set shortmess+=I               " Don't show :intro
try
  set signcolumn=number        " Show line numbers and signs on the same column"
catch
  set signcolumn=yes           " Fallback for older versions
endtry
set expandtab shiftround smartindent autoindent " Indent stuff
set fcs=eob:\                  " hide ~ on blank lines
set guifont=Fira\ Code:h15     " Font for MacVim
" set foldmethod=syntax          " Fold by syntax

"
" Key mapping
"

" Remap leader key
let mapleader = "\<space>"

" Disable Ex Mode
nmap Q <Nop>

" Ctrl+c is ESC (it is by default but it won't trigger autocommands)
imap <c-c> <esc>

" Ctrl+hjkl moves split focus
nmap <c-h> <c-w>h
nmap <c-j> <c-w>j
nmap <c-k> <c-w>k
nmap <c-l> <c-w>l

" Use + to select all word matches
nmap + *N

" Center match when navigating through search results
nnoremap n nzz
nnoremap N Nzz
nnoremap * *zz

" Ctrl+t new tab
nmap <c-t> :tabe<cr>

" Ctrl+q close buffer
nmap <c-q> :bd<cr>

" Ctrl+s to save
nmap <c-s> :w<cr>

" Open .vimrc
nmap <leader>v :e ~/.vimrc<cr>

" Use system clipboard (reg *)
nmap <leader>cp "*y
vmap <leader>cp "*y
nmap <leader>p "*p
vmap <leader>p "*p

" Y should not be the same as yy
nmap Y y$

" Navigate buffers
" nmap <leader><leader> :ls<CR>:b<Space>
nmap gb :bprev<cr>
nmap gn :bnext<cr>

" Disable arrow keys
nmap <Up> <Nop>
nmap <Down> <Nop>
nmap <Left> <Nop>
nmap <Right> <Nop>

" Easier block indentation
nnoremap > >>
nnoremap < <<
vnoremap > >gv
vnoremap < <gv
" ctrl+i is mapped to Tab so is not the opposite of ctrl+o anymore

" Fold
nmap <leader>< zM
nmap <leader>> zR
nmap H zc
nmap L zo

" Search and replace in file/line (selection or word)
vnoremap <c-n> "9y:%s/<c-r>9/<c-r>9/g<left><left>
nnoremap <c-n> viw"9y:%s/<c-r>9/<c-r>9/g<left><left>
vnoremap <leader>n "9y:s/<c-r>9/<c-r>9/g<left><left>
nnoremap <leader>n viw"9y:s/<c-r>9/<c-r>9/g<left><left>

" Map ESC key to exit insert mode in :terminal (vim8 or neovim)
if has('terminal') || has('nvim')
  tmap <Esc> <C-\><C-n>
endif

" Remove highlights
nmap <silent> <leader>h :noh<cr>

"
" Autocommands
"

" I don't wanna save changes to a directory ¬¬
autocmd FileType netrw setl bufhidden=delete

augroup templates
  autocmd!
  autocmd BufNewFile *.tsx,*.jsx
    \ 0r $HOME/.config/nvim/templates/react.tsx |
    \ %s/FILENAME/\=expand('%:t:r')/g
  autocmd BufNewFile *_document.*
    \ 0r $HOME/.config/nvim/templates/_document.tsx
  autocmd BufNewFile *.json
    \ 0r $HOME/.config/nvim/templates/empty.json |
    \ exe "normal ggo"
augroup end

augroup LuaHighlight
  autocmd!
  autocmd TextYankPost * silent! lua require'vim.highlight'.on_yank()
augroup END

"
" Abbreviations
"
iabbr widht width
iabbr heigth height
iabbr lenght length
iabbr ligth light
iabbr rigth right
iabbr ireact import React from 'react'
iabbr fcreact const Component = () =>
iabbr ccreact class Component extends React.Component

" Custom commands
command! ImportES6 :execute "normal! 0ciwimport\<esc>f=hdt'i from \<esc>f)xj0"
command! ConstImport :execute "normal! 0ciwconst\<esc>/from\<cr>ciw= require(\<esc>lxA)\<esc>"
command! MetaResponsiveTag :execute "normal! i<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\<esc>"
command! HotReload autocmd BufWritePost % source %

"
" Color config
"
set termguicolors
" dark mode enabled?
if system("defaults read -g AppleInterfaceStyle") =~ '^Dark'
  colorscheme habamax
else
  colorscheme peachpuff
endif
