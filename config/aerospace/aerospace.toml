# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# Start AeroSpace at login
start-at-login = true

# Utils for sketchybar https://github.com/FelixKratz/SketchyBar/discussions/599#discussioncomment-11093795
# exec-on-workspace-change = [
#   '/bin/bash',
#   '-c',
#   'sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=$AEROSPACE_FOCUSED_WORKSPACE',
# ]
# on-focus-changed = [
#   'exec-and-forget sketchybar --trigger aerospace_focus_change',
# ]

# Utils for janky borders
# after-startup-command = [
#   'exec-and-forget brew services restart borders'
# ]

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 30

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-alt-cmd-ctrl-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodies#disable-hide-app
automatically-unhide-macos-hidden-apps = false

# Possible values: (qwerty|dvorak|colemak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
[key-mapping]
  preset = 'qwerty'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See:
#                 https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
  inner.horizontal = 4
  inner.vertical =   4
  outer.left =       4
  outer.right =      4
  outer.bottom =     4
  outer.top = [
    { monitor."built-in" = 0 }, # for built-in display (notch)
    4 # regular monitors (with sketchy bar)
  ]

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

  # All possible keys:
  # - Letters.        a, b, c, ..., z
  # - Numbers.        0, 1, 2, ..., 9
  # - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
  # - F-keys.         f1, f2, ..., f20
  # - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon,
  #                   backtick, leftSquareBracket, rightSquareBracket, space, enter, esc,
  #                   backspace, tab, pageUp, pageDown, home, end, forwardDelete,
  #                   sectionSign (ISO keyboards only, european keyboards only)
  # - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
  #                   keypadMinus, keypadMultiply, keypadPlus
  # - Arrows.         left, down, up, right

  # All possible modifiers: cmd, alt, ctrl, shift

  # All possible commands: https://nikitabobko.github.io/AeroSpace/commands

  # See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
  # You can uncomment the following lines to open up terminal with alt + enter shortcut
  # (like in i3)
  # alt-cmd-ctrl-enter = '''exec-and-forget osascript -e '
  # tell application "Terminal"
  #     do script
  #     activate
  # end tell'
  # '''

  # See: https://nikitabobko.github.io/AeroSpace/commands#layout
  alt-cmd-ctrl-s = 'layout tiles horizontal vertical'
  alt-cmd-ctrl-a = 'layout accordion horizontal vertical'
  # alt-cmd-ctrl-d = 'layout bsp vertical horizontal' # one day...

  # See: https://nikitabobko.github.io/AeroSpace/commands#focus
  alt-cmd-ctrl-h = 'focus left'
  alt-cmd-ctrl-j = 'focus down'
  alt-cmd-ctrl-k = 'focus up'
  alt-cmd-ctrl-l = 'focus right'

  # See: https://nikitabobko.github.io/AeroSpace/commands#move
  alt-cmd-ctrl-shift-h = 'move left'
  alt-cmd-ctrl-shift-j = 'move down'
  alt-cmd-ctrl-shift-k = 'move up'
  alt-cmd-ctrl-shift-l = 'move right'

  # See: https://nikitabobko.github.io/AeroSpace/commands#resize
  alt-cmd-ctrl-comma = 'resize smart -50'
  alt-cmd-ctrl-period = 'resize smart +50'

  # See: https://nikitabobko.github.io/AeroSpace/commands#workspace
  # alt-cmd-ctrl-q = 'workspace Q'
  # alt-cmd-ctrl-w = 'workspace W'
  # alt-cmd-ctrl-e = 'workspace E'
  # alt-cmd-ctrl-r = 'workspace R'
  # alt-cmd-ctrl-t = 'workspace T'
  # alt-cmd-ctrl-y = 'workspace Y'
  # alt-cmd-ctrl-u = 'workspace U'
  # alt-cmd-ctrl-i = 'workspace I'
  # alt-cmd-ctrl-o = 'workspace O'
  # alt-cmd-ctrl-p = 'workspace P'
  alt-cmd-ctrl-1 = 'workspace 1'
  alt-cmd-ctrl-2 = 'workspace 2'
  alt-cmd-ctrl-3 = 'workspace 3'
  alt-cmd-ctrl-4 = 'workspace 4'
  alt-cmd-ctrl-5 = 'workspace 5'
  alt-cmd-ctrl-6 = 'workspace 6'
  alt-cmd-ctrl-7 = 'workspace 7'
  alt-cmd-ctrl-8 = 'workspace 8'
  alt-cmd-ctrl-9 = 'workspace 9'
  # alt-cmd-ctrl-0 = 'workspace 0'

  alt-cmd-ctrl-f = ['layout floating tiling', 'mode main'] # Toggle between floating and tiling layout

  # See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
  # alt-cmd-ctrl-shift-q = 'move-node-to-workspace --focus-follows-window Q'
  # alt-cmd-ctrl-shift-w = 'move-node-to-workspace --focus-follows-window W'
  # alt-cmd-ctrl-shift-e = 'move-node-to-workspace --focus-follows-window E'
  # alt-cmd-ctrl-shift-r = 'move-node-to-workspace --focus-follows-window R'
  # alt-cmd-ctrl-shift-y = 'move-node-to-workspace --focus-follows-window Y'
  # alt-cmd-ctrl-shift-u = 'move-node-to-workspace --focus-follows-window U'
  # alt-cmd-ctrl-shift-i = 'move-node-to-workspace --focus-follows-window I'
  # alt-cmd-ctrl-shift-o = 'move-node-to-workspace --focus-follows-window O'
  # alt-cmd-ctrl-shift-p = 'move-node-to-workspace --focus-follows-window P'
  alt-cmd-ctrl-shift-1 = 'move-node-to-workspace --focus-follows-window 1'
  alt-cmd-ctrl-shift-2 = 'move-node-to-workspace --focus-follows-window 2'
  alt-cmd-ctrl-shift-3 = 'move-node-to-workspace --focus-follows-window 3'
  alt-cmd-ctrl-shift-4 = 'move-node-to-workspace --focus-follows-window 4'
  alt-cmd-ctrl-shift-5 = 'move-node-to-workspace --focus-follows-window 5'
  alt-cmd-ctrl-shift-6 = 'move-node-to-workspace --focus-follows-window 6'
  alt-cmd-ctrl-shift-7 = 'move-node-to-workspace --focus-follows-window 7'
  alt-cmd-ctrl-shift-8 = 'move-node-to-workspace --focus-follows-window 8'
  alt-cmd-ctrl-shift-9 = 'move-node-to-workspace --focus-follows-window 9'
  # alt-cmd-ctrl-shift-0 = 'move-node-to-workspace --focus-follows-window 0'

  # See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
  alt-cmd-ctrl-tab = 'workspace-back-and-forth'
  # See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
  alt-cmd-ctrl-shift-tab = 'move-workspace-to-monitor --wrap-around next'

  # See: https://nikitabobko.github.io/AeroSpace/commands#mode
  alt-cmd-ctrl-esc = 'mode service'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
  esc = ['reload-config', 'mode main']
  # r = ['flatten-workspace-tree', 'mode main'] # reset layout
  # f = ['layout floating tiling', 'mode main'] # Toggle between floating and tiling layout
  # backspace = ['close-all-windows-but-current', 'mode main']

  # sticky is not yetjsupported https://github.com/nikitabobko/AeroSpace/issues/2
  #s = ['layout sticky tiling', 'mode main']

  h = ['join-with left', 'mode main']
  j = ['join-with down', 'mode main']
  k = ['join-with up', 'mode main']
  l = ['join-with right', 'mode main']

  # down = 'volume down'
  # up = 'volume up'
  # shift-down = ['volume set 0', 'mode main']


[[on-window-detected]]
  if.app-name-regex-substring = "Karabiner"
  run = 'layout floating'
[[on-window-detected]]
  if.window-title-regex-substring = "SecurityAgent"
  run = 'layout floating'
[[on-window-detected]]
  if.window-title-regex-substring = "Vista Previa"
  run = 'layout floating'
[[on-window-detected]]
  if.window-title-regex-substring = "Preview"
  run = 'layout floating'

# Assign apps on particular workspaces
[[on-window-detected]]
  if.app-name-regex-substring = "Zen"
  run = 'move-node-to-workspace 1'
[[on-window-detected]]
  if.app-name-regex-substring = "Ghostty"
  run = 'move-node-to-workspace 2'
[[on-window-detected]]
  if.app-name-regex-substring = "Slack"
  run = 'move-node-to-workspace 3'
[[on-window-detected]]
  if.app-name-regex-substring = "zoom.us"
  run = 'move-node-to-workspace 4'
[[on-window-detected]]
  if.app-name-regex-substring = "Missive"
  run = 'move-node-to-workspace 5'
[[on-window-detected]]
  if.app-name-regex-substring = "Calendar"
  run = 'move-node-to-workspace 5'
[[on-window-detected]]
  if.app-name-regex-substring = "Spotify"
  run = 'move-node-to-workspace 6'
[[on-window-detected]]
  if.app-name-regex-substring = "WhatsApp"
  run = 'move-node-to-workspace 7'
[[on-window-detected]]
  if.app-name-regex-substring = "Telegram"
  run = 'move-node-to-workspace 7'
