set nocompatible
filetype plugin on

" line numbers
set number

" search files subdirectories
set path+=**

" allow tab to autocomplete searching files
set wildmenu
set wildignore+=**/node_modules/**
set wildignore+=**/cache/**
set wildignore+=**/logs/**
set wildignore+=**/cov/**

" syntax and colors
syntax on

" invisible characters (tab, eol and trailing whitespace)
set list
set listchars=tab:▸\ ,eol:¬,trail:▫
highlight SpecialKey ctermfg=grey guifg=grey70 " Tab characters are gray
highlight NonText ctermfg=grey guifg=grey70

" Plugins
call plug#begin('~/.vim/plugged')
Plug 'airblade/vim-gitgutter' " Git-themes diff
Plug 'vim-airline/vim-airline' " Status bar
Plug 'vim-airline/vim-airline-themes' " Status bar themes
Plug 'terryma/vim-multiple-cursors' " Find all and edit
Plug 'haya14busa/incsearch.vim' " Search feedback
Plug 'mileszs/ack.vim' " Find in all project
Plug 'tpope/vim-commentary' " Comment lines
Plug 'scrooloose/nerdtree' " NERDTree
Plug 'Xuyuanp/nerdtree-git-plugin' " NERDTree git
Plug 'pangloss/vim-javascript' " Improve javascript
Plug 'mxw/vim-jsx' " jsx syntax
Plug 'vim-syntastic/syntastic' " Syntax checker
Plug 'mattn/emmet-vim' " Emmet
Plug 'christoomey/vim-tmux-navigator' " Navigation between vim/tmux panes
Plug 'fxn/vim-monochrome' " Grayscale theme
Plug 'editorconfig/editorconfig-vim' " .editorconfig
call plug#end()

" Improved paste
set paste

" Color scheme
colorscheme monochrome

" Syntastic settings
let g:syntastic_js_checkers = ['standard'] " make syntastic to use standard in js files
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*
" let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
let g:syntastic_html_tidy_ignore_errors=[" proprietary attribute " ,"trimming empty <", "unescaped &" , "lacks \"action", "is not recognized!"]


" use ag instead of ack with ack.vim
let g:ackprg = 'ag --nogroup --nocolor --column'

" NERDTree Git symbols
let g:NERDTreeIndicatorMapCustom = {
      \ "Modified"  : "~",
      \ "Staged"    : "+",
      \ "Untracked" : "?",
      \ "Renamed"   : "r",
      \ "Unmerged"  : "=",
      \ "Deleted"   : "✗",
      \ "Dirty"     : "*",
      \ "Clean"     : "✓",
      \ "Ignored"   : "·",
      \ "Unknown"   : "??"
      \ }

" JSX syntax in JS files
let g:jsx_ext_required = 0

" airline
set laststatus=2
let g:airline_theme='light'

" allow per project settings
set exrc
set secure

" COMMANDS
command! MakeTags !ctags -R . --exclude=.git --exclude=*cache* --exclude=*logs* --exclude=node_modules --exclude=cov

" Remap keys
nnoremap ] <C-]> " ] is gonna do CTRL+] (used to search tags)
nnoremap <C-b> :NERDTreeToggle<CR> " Ctrl+b opens NERDTree
nnoremap <C-s> <esc>:w<CR> " Ctrl+s saves file in normal mode
nnoremap <C-i> <esc>gg=G`` " Ctrl+i formats file indentation and goes back to where I was
"" Disable arrow keys
nnoremap <Up> <Nop>
nnoremap <Down> <Nop>
nnoremap <Left> <Nop>
nnoremap <Right> <Nop>

" Indentation
set expandtab shiftround smartindent autoindent

" hyper.app first line bug
set t_RV=
