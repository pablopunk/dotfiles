" File settings
filetype plugin indent on

" Interface
set number
set ttyfast    " Faster redrawing
set lazyredraw " Only when necessary
set noshowmode " Already showing the mode in status bar

" Search settings
set incsearch
set hlsearch
set path+=**   " Search files subdirectories

" Encoding
set list       " Show non-printable characters
set encoding=utf-8

" Allow tab to autocomplete searching files
set wildmenu
set wildignore+=**/node_modules/**
set wildignore+=**/cache/**
set wildignore+=**/logs/**
set wildignore+=**/log/**
set wildignore+=**/cov/**
set wildignore+=**/coverage/**
set wildignore+=**/vendor/**
set wildignore+=**/bower_components/**

" Invisible characters (tab, eol and trailing whitespace)
set list
set listchars=tab:▸\ ,eol:¬,trail:▫
highlight SpecialKey ctermfg=grey guifg=grey70 " Tab characters are gray
highlight NonText ctermfg=grey guifg=grey70

" PLUGINS
call plug#begin('~/.vim/plugged')
" Git plugins
Plug 'airblade/vim-gitgutter'                   " Show changes on each line
Plug 'Xuyuanp/nerdtree-git-plugin'              " Git status on NERDTree
" Editting tools
Plug 'terryma/vim-multiple-cursors'             " Find all and edit
Plug 'tpope/vim-commentary'                     " Toggle comments
" Search tools
Plug 'mileszs/ack.vim'                          " Find in all files
Plug 'kien/ctrlp.vim'                           " Open a file
Plug 'brooth/far.vim'                           " Find and replace in all files
" Navigation tools
Plug 'scrooloose/nerdtree'                      " File navigator
Plug 'christoomey/vim-tmux-navigator'           " Navigation between vim/tmux panes
" Html tools
Plug 'mattn/emmet-vim'                          " Very cool html snippets
" Syntax tools
Plug 'w0rp/ale'                                 " Async syntax checker
Plug 'editorconfig/editorconfig-vim'            " Use lint config in .editorconfig
Plug 'prettier/vim-prettier'                    " Lint js with prettier
Plug 'leafgarland/typescript-vim'               " Typescript syntax
Plug 'Quramy/tsuquyomi'                         " Typescript autocomplete and stuff
Plug 'mxw/vim-jsx'                              " Jsx syntax
" Dashboard tools
Plug 'vim-airline/vim-airline'                  " Status bar
Plug 'vim-airline/vim-airline-themes'           " Status bar themes
Plug 'edkolev/tmuxline.vim'                     " Apply airline theme to tmux
" Project tools
Plug 'wakatime/vim-wakatime'                    " Time tracker
" Colors
Plug 'chriskempson/base16-vim'                  " Collection of colorschemes
call plug#end()

" Colors
set syntax=on
if exists('$TMUX')
  " Colors in tmux
  let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
  let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
endif
set termguicolors
set background=dark
colorscheme base16-atelier-cave

" Ale settings
let g:ale_fixers = {
\   'javascript': ['standard']
\}
let g:ale_linters = {
\   'javascript': ['standard']
\}

let g:ale_fix_on_save = 1 " FIX files on save
let g:ale_completion_enabled = 1 " Try to complete stuff
let g:airline#extensions#ale#enabled = 1 " Errors in airline

" Prettier settings
let g:prettier#config#bracket_spacing = 'true'
let g:prettier#config#tab_width = 2
let g:prettier#config#trailing_comma = 'none'
"let g:prettier#config#semi = 'false'

" use ag instead of ack with ack.vim
let g:ackprg = 'ag --nogroup --nocolor --column'

" NERDTree Git symbols
let g:NERDTreeIndicatorMapCustom = {
      \ "Modified"  : "~",
      \ "Staged"    : "+",
      \ "Untracked" : "?",
      \ "Renamed"   : "r",
      \ "Unmerged"  : "=",
      \ "Deleted"   : "✗",
      \ "Dirty"     : "*",
      \ "Clean"     : "✓",
      \ "Ignored"   : "·",
      \ "Unknown"   : "??"
      \ }

" JSX syntax in JS files
let g:jsx_ext_required = 0

" Airline config
set laststatus=2
let g:airline_theme='minimalist'
let g:airline_powerline_fonts = 1
let g:airline#extensions#tabline#enabled = 1

" prevent not-working delete key
set backspace=indent,eol,start

" COMMANDS
command! MakeTags !ctags -R . --exclude=.git --exclude=logs --exclude=node_modules --exclude=cov --exclude=app
"" Lint js with xo
command! XO :let g:ale_linters = { 'javascript': ['xo'] } | :let g:ale_fixers = { 'javascript': [] }
"" Lint js with standard
command! ST :let g:ale_linters = { 'javascript': ['standard'] } | :let g:ale_fixers = { 'javascript': ['standard'] }

" Remap keys
nnoremap <c-s> <esc>:w<CR> " Ctrl+s saves file in normal mode
nnoremap <c-b> :NERDTreeToggle<CR> " Ctrl+b opens NERDTree
nnoremap <c-i> <esc>gg=G`` " Ctrl+i formats file indentation
nnoremap <c-q> :tabedit %<CR> " Move current buffer to a new tab
inoremap º <esc> " New esc key
"" Disable arrow keys
nnoremap <Up> <Nop>
nnoremap <Down> <Nop>
nnoremap <Left> <Nop>
nnoremap <Right> <Nop>

" AUTOCOMMANDS
"" Resizing window resets splits
autocmd VimResized * execute "normal! \<c-w>="

" Indentation
set expandtab shiftround smartindent autoindent

" Hyper.app first line bug
set t_RV=
