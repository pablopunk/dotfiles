function powersave {
  # linux
  sudo cpufreq-set -g powersave && \
    sudo pm-powersave true
}

function power {
  sudo cpufreq-set -g performance && \
    sudo pm-powersave false
}

function gclone {
  git clone git@github.com:pablopunk/$1 && cd $1
}

function grebase {
  branch="$(git symbolic-ref --short HEAD)"
  git fetch upstream && \
    git rebase upstream/$branch
}

function greset_hard {
  branch="$(git symbolic-ref --short HEAD)"
  git fetch upstream && \
    git reset --hard upstream/$branch
}

function gpr_checkout {
  if [ -z "$1" ]
    then
      echo "Missing github PR link"
      return
  fi

  if [ ! -z "$(git status --porcelain)" ]
    then
      echo "Git status is not clean"
      return
  fi

  html="$(curl -s $1)"
  matches="$(echo $html | grep -o 'title="[^\/]*\/[^:]*:[^"]*' | awk '!x[$0]++')"
  lines="$(echo $matches | awk 'END{print NR}')"

  if [[ ! "$lines" == 2 ]]
    then
      echo $matches
      echo
      echo "Oops, either the link was wrong or github has changed their html. Check it manually above:"
      return
  fi

  first_line="$(echo $matches | sed 's/^\s*$//' | sed -n '1 p' | sed 's/title="//')"
  upstream_user="$(echo $first_line | cut -d'/' -f1)"
  upstream_repo="$(echo $first_line | egrep -o '/.*:' | tr -d '/:')"
  upstream_branch="$(echo $first_line | cut -d':' -f2)"

  second_line="$(echo $matches | sed 's/^\s*$//' | sed -n '2 p' | sed 's/title="//')"
  pr_user="$(echo $second_line | cut -d'/' -f1)"
  pr_repo="$(echo $second_line | egrep -o '/.*:' | tr -d '/:')"
  pr_branch="$(echo $second_line | cut -d':' -f2)"

  git fetch upstream
  git checkout $upstream_branch || return
  git reset --hard upstream/$upstream_branch

  git remote add $pr_user https://github.com/$pr_user/$pr_repo
  git fetch $pr_user
  git checkout $pr_user-$pr_branch || git checkout -b $pr_user-$pr_branch
  git branch --set-upstream-to=$pr_user/$pr_branch
  git reset --hard $pr_user/$pr_branch
}

function copy {
  [ "$(uname)" == "Linux" ] && xsel --clipboard --input
  [ "$(uname)" == "Darwin" ] && pbcopy
}

function weather {
  curl -s "wttr.in/${1-pontevedra}?format=1"
}

function nvm {
  unset -f nvm
  if [ "$(uname)" = "Darwin" ]; then
    [ -s "/usr/local/opt/nvm/nvm.sh" ] && . "/usr/local/opt/nvm/nvm.sh"
  else
    [ -s "/home/linuxbrew/.linuxbrew/opt/nvm/nvm.sh" ] && . "/home/linuxbrew/.linuxbrew/opt/nvm/nvm.sh"
  fi
  nvm $@
}
